{"version":3,"sources":["components/EmployeeItem.js","components/Employees.js","components/About.js","components/EmployeeDetails.js","components/AddEmployee.js","components/EditEmployee.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","react_default","a","createElement","Link","to","concat","_id","className","firstname","role","href","department","Component","Employees","employees","getEmployees","_this2","axios","get","then","res","setState","data","console","log","catch","err","employeesItems","map","employee","components_EmployeeItem","key","About","target","EmployeeDetails","_Component","details","inherits","createClass","value","getEmployee","employeeId","match","params","id","_this3","delete","history","push","src","alt","lastname","onClick","onDelete","bind","AddEmployee","newEmployee","post","headers","Content-Type","e","refs","addEmployees","preventDefault","onSubmit","htmlFor","type","name","ref","EditEmployee","handleInputChange","assertThisInitialized","getEmployeeDetails","method","url","response","error","updateEmployee","defineProperty","onChange","Main","Switch","Route","exact","path","component","EmployeeDetail","Navbar","apply","arguments","App","components_Navbar","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8a8ddaa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EmployeeItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: props.item\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Link to={`/employee/${this.state.item._id}`}>\r\n        <div className=\"col s12 m6\">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-title\">{this.state.item.firstname}</span>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <span className=\"amber-text text-darken-2\">\r\n                {this.state.item.role}|{\" \"}\r\n              </span>\r\n\r\n              <span className=\"amber-text text-darken-2\" href=\"#\">\r\n                {this.state.item.department}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeItem;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport EmployeeItem from \"./EmployeeItem\";\r\n\r\nclass Employees extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      employees: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getEmployees();\r\n  }\r\n\r\n  getEmployees() {\r\n    axios\r\n      .get(\"https://flaskemployeeapi.herokuapp.com/api/employees\")\r\n      .then(res => {\r\n        this.setState({ employees: res.data }, () => console.log(this.state));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const employeesItems = this.state.employees.map(employee => {\r\n      return <EmployeeItem key={employee._id} item={employee} />;\r\n    });\r\n    return (\r\n      <div>\r\n        <h1>Employees</h1>\r\n        <div className=\"row\">{employeesItems}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n      <h5>\r\n        Welcome to the Employe manager app. Built with React Front-end and Flask\r\n        with MongoDB Back-end. Feel free to add, manage and delete employees to\r\n        this open source project.\r\n      </h5>\r\n      <div className=\"center-text\">\r\n        <h6>\r\n          <span>Portfolio:</span>{\" \"}\r\n          <a href=\"https://ridwynidriss.com\" target=\"_blank\">\r\n            ridwynidriss.com\r\n          </a>\r\n        </h6>\r\n        <h6>Code and Design by Ridwyn Idrissou</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class EmployeeDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      details: \"\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getEmployee();\r\n  }\r\n\r\n  getEmployee() {\r\n    let employeeId = this.props.match.params.id;\r\n    axios\r\n      .get(`https://flaskemployeeapi.herokuapp.com/api/get/${employeeId}`)\r\n      .then(res => {\r\n        this.setState({ details: res.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    let employeeId = this.props.match.params.id;\r\n    axios\r\n      .delete(`https://flaskemployeeapi.herokuapp.com/api/delete/${employeeId}`)\r\n      .then(res => {\r\n        this.props.history.push(\"/\");\r\n        console.log(\"deleted\");\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Link className=\"btn grey\" to=\"/\">\r\n          Back\r\n        </Link>\r\n        <h1> {this.state.details.firstname}</h1>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-image waves-effect waves-block waves-light\">\r\n            <img className=\"activator\" src=\"\" alt=\"\" />\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <h6>Firstname: {this.state.details.firstname}</h6>\r\n            <h6>Lastname: {this.state.details.lastname}</h6>\r\n            <h6>Role: {this.state.details.role}</h6>\r\n            <h6>Department: {this.state.details.department}</h6>\r\n          </div>\r\n        </div>\r\n        <Link className=\"btn\" to={`/employee/edit/${this.state.details._id}`}>\r\n          Edit\r\n        </Link>\r\n        <button onClick={this.onDelete.bind(this)} className=\"btn red right\">\r\n          Delete\r\n        </button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDetails;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nclass AddEmployee extends Component {\r\n  addEmployees(newEmployee) {\r\n    axios\r\n      .post(\"https://flaskemployeeapi.herokuapp.com/api/add\", newEmployee, {\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      })\r\n      .then(res => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const newEmployee = {\r\n      firstname: this.refs.firstname.value,\r\n      lastname: this.refs.lastname.value,\r\n      role: this.refs.role.value,\r\n      department: this.refs.department.value\r\n    };\r\n    this.addEmployees(newEmployee);\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link className=\"btn grey\" to=\"/\">\r\n          Back\r\n        </Link>\r\n        <h2>Add a New Employee</h2>\r\n        <form onSubmit={this.onSubmit.bind(this)}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstname\">Firstname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"firstname\"\r\n              ref=\"firstname\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastname\">Lastname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lastname\"\r\n              ref=\"lastname\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"role\"\r\n              ref=\"role\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"department\">Department</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"department\"\r\n              ref=\"department\"\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class EditEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      role: \"\",\r\n      department: \"\"\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getEmployeeDetails();\r\n  }\r\n\r\n  getEmployeeDetails() {\r\n    let employeeId = this.props.match.params.id;\r\n    axios\r\n      .get(`https://flaskemployeeapi.herokuapp.com/api/get/${employeeId}`)\r\n      .then(res => {\r\n        this.setState({\r\n          firstname: res.data.firstname,\r\n          lastname: res.data.lastname,\r\n          role: res.data.role,\r\n          department: res.data.department\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  updateEmployee(newEmployee) {\r\n    let employeeId = this.props.match.params.id;\r\n    axios({\r\n      method: \"put\",\r\n      url: `https://flaskemployeeapi.herokuapp.com/api/update/${employeeId}`,\r\n      data: newEmployee,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const newEmployee = {\r\n      firstname: this.refs.firstname.value,\r\n      lastname: this.refs.lastname.value,\r\n      role: this.refs.role.value,\r\n      department: this.refs.department.value\r\n    };\r\n    this.updateEmployee(newEmployee);\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link className=\"btn grey\" to=\"/\">\r\n          Back\r\n        </Link>\r\n        <h2>Add a New Employee</h2>\r\n        <form onSubmit={this.onSubmit.bind(this)}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstname\">Firstname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"firstname\"\r\n              ref=\"firstname\"\r\n              value={this.state.firstname}\r\n              onChange={this.handleInputChange.bind(this)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastname\">Lastname</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"lastname\"\r\n              ref=\"lastname\"\r\n              value={this.state.lastname}\r\n              onChange={this.handleInputChange.bind(this)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"role\"\r\n              ref=\"role\"\r\n              value={this.state.role}\r\n              onChange={this.handleInputChange.bind(this)}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"department\">Department</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"department\"\r\n              ref=\"department\"\r\n              value={this.state.department}\r\n              onChange={this.handleInputChange.bind(this)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditEmployee;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Employees from \"./Employees\";\r\nimport About from \"./About\";\r\nimport EmployeeDetail from \"./EmployeeDetails\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EditEmployee from \"./EditEmployee\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Employees} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/employees/add\" component={AddEmployee} />\r\n        <Route exact path=\"/employee/edit/:id\" component={EditEmployee} />\r\n        <Route exact path=\"/employee/:id\" component={EmployeeDetail} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"blue darken-3\">\r\n          <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo left\">\r\n              Employee Manager\r\n            </Link>\r\n            <ul className=\"right\">\r\n              <li>\r\n                <Link to=\"/\">\r\n                  Employees\r\n                  <i className=\"fa fa-users fa-2x\" />\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/employees/add\">\r\n                  Add Employee\r\n                  <i className=\"fa fa-plus fa-2x\" />\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\">\r\n                  About\r\n                  <i className=\"fa fa-question-circle fa-2x\" />\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\nimport { Link } from \"react-router-dom\";\n\nconst App = () => (\n  <div>\n    <Navbar />\n    <div className=\"container\">\n      <Main />\n    </div>\n    <Link to=\"/employees/add\" className=\"btn-floating right btn-large red\">\n      <i className=\"fa fa-plus fa-4x\" />\n    </Link>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}